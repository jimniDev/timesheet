
entity Employee {
	isEmployed Boolean
}

entity TargetWorkingDay {
	hours Integer required
}

entity DayOfWeek {
	name String required
}

entity WeeklyWorkingHours {
	hours Integer,
	startDate Instant,
	endDate Instant
}

entity WorkingEntry {
	start Instant required,
    end Instant required,
    deleteFlag Boolean,
    lockedFlag Boolean,
    createdAt Instant required
}

entity WorkDay {
	date Instant required
}

entity Break {
	minutes Integer required
}

entity Activity {
	name String required,
    description String
}

entity Role {
	name String required,
	description String
}

entity Location {
	street String,
    streetNumber String,
    postalCode String,
    city String
}

entity Country {
	countryName String
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Employee{workingEntry} to WorkingEntry{employee},
    Employee{targetWorkingDay} to TargetWorkingDay{employee},
    Employee{weeklyWorkingHours} to WeeklyWorkingHours{employee},
    Employee{workDay} to WorkDay{employee},
	Employee{break} to Break{employee},
    DayOfWeek{targetWorkingDay} to TargetWorkingDay{dayOfWeek},
    Activity{workingEntry} to WorkingEntry{activity},
    Role{activity} to Activity{role},
    WorkDay{workingEntry} to WorkingEntry{workDay},
    WorkDay{break} to Break{workDay},
    Location{workingEntry} to WorkingEntry{location},
    Country{location} to Location{country}
}

// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
//paginate Job with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceClass //except Employee, Job

// Set an angular suffix
angularSuffix * with timesheet

filter *
